{"ast":null,"code":"import { ProductFormValues } from '../../shared/models/product';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../admin.service\";\nimport * as i2 from \"../../shop/shop.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-bootstrap/tabs\";\nimport * as i5 from \"../edit-product-form/edit-product-form.component\";\nimport * as i6 from \"../edit-product-photos/edit-product-photos.component\";\nexport let EditProductComponent = /*#__PURE__*/(() => {\n  class EditProductComponent {\n    constructor(adminService, shopService, route, router) {\n      this.adminService = adminService;\n      this.shopService = shopService;\n      this.route = route;\n      this.router = router;\n      this.product = new ProductFormValues();\n    }\n\n    ngOnInit() {\n      const brands = this.getBrands();\n      const types = this.getTypes();\n      forkJoin([types, brands]).subscribe(results => {\n        this.types = results[0];\n        this.brands = results[1];\n      }, error => {\n        console.log(error);\n      }, () => {\n        if (this.route.snapshot.url[0].path === 'edit') {\n          this.loadProduct();\n        }\n      });\n    }\n\n    loadProduct() {\n      this.shopService.getProduct(+this.route.snapshot.paramMap.get('id')).subscribe(response => {\n        const productBrandId = this.brands && this.brands.find(x => x.name === response.productBrand).id;\n        const productTypeId = this.types && this.types.find(x => x.name === response.productType).id;\n        this.product = response;\n        this.productFormValues = Object.assign(Object.assign({}, response), {\n          productBrandId,\n          productTypeId\n        });\n      });\n    }\n\n    getBrands() {\n      return this.shopService.getBrands();\n    }\n\n    getTypes() {\n      return this.shopService.getTypes();\n    }\n\n  }\n\n  EditProductComponent.ɵfac = function EditProductComponent_Factory(t) {\n    return new (t || EditProductComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.ShopService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EditProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditProductComponent,\n    selectors: [[\"app-edit-product\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[1, \"product-edit\", \"mt-5\"], [1, \"container\"], [1, \"row\"], [1, \"col-12\"], [1, \"tab-panel\"], [1, \"product-tabset\"], [\"heading\", \"Edit Product\"], [1, \"col-lg-8\"], [3, \"product\", \"brands\", \"types\"], [\"heading\", \"Edit Photos\"]],\n    template: function EditProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"tabset\", 5)(6, \"tab\", 6)(7, \"div\", 7);\n        i0.ɵɵelement(8, \"app-edit-product-form\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"tab\", 9);\n        i0.ɵɵelement(10, \"app-edit-product-photos\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"product\", ctx.productFormValues)(\"brands\", ctx.brands)(\"types\", ctx.types);\n      }\n    },\n    directives: [i4.TabsetComponent, i4.TabDirective, i5.EditProductFormComponent, i6.EditProductPhotosComponent],\n    styles: [\"\"]\n  });\n  return EditProductComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}