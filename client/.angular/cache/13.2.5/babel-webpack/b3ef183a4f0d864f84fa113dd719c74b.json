{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"input\"];\n\nfunction TextInputComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\n\nfunction TextInputComponent_div_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r4.label, \" is required\");\n  }\n}\n\nfunction TextInputComponent_div_6_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Invalid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TextInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, TextInputComponent_div_6_span_1_Template, 2, 1, \"span\", 9);\n    i0.ɵɵtemplate(2, TextInputComponent_div_6_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.controlDir.control.errors == null ? null : ctx_r2.controlDir.control.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.controlDir.control.errors == null ? null : ctx_r2.controlDir.control.errors.pattern);\n  }\n}\n\nfunction TextInputComponent_div_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email address is in use\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TextInputComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, TextInputComponent_div_7_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.controlDir.control.errors == null ? null : ctx_r3.controlDir.control.errors.emailExists);\n  }\n}\n\nexport let TextInputComponent = /*#__PURE__*/(() => {\n  class TextInputComponent {\n    constructor(controlDir) {\n      this.controlDir = controlDir;\n      this.type = 'text';\n      this.label = 'string';\n      this.controlDir.valueAccessor = this;\n    }\n\n    ngOnInit() {\n      const control = this.controlDir.control;\n      const validators = control.validator ? [control.validator] : [];\n      const asyncValidators = control.asyncValidator ? [control.asyncValidator] : [];\n      control.setValidators(validators);\n      control.setAsyncValidators(asyncValidators);\n      control.updateValueAndValidity();\n    }\n\n    onChange(event) {}\n\n    onTouched() {}\n\n    writeValue(obj) {\n      this.input.nativeElement.value = obj || '';\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n  }\n\n  TextInputComponent.ɵfac = function TextInputComponent_Factory(t) {\n    return new (t || TextInputComponent)(i0.ɵɵdirectiveInject(i1.NgControl, 2));\n  };\n\n  TextInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TextInputComponent,\n    selectors: [[\"app-text-input\"]],\n    viewQuery: function TextInputComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n      }\n    },\n    inputs: {\n      type: \"type\",\n      label: \"label\"\n    },\n    decls: 8,\n    vars: 8,\n    consts: [[1, \"form-label-group\"], [1, \"form-control\", 3, \"ngClass\", \"type\", \"placeholder\", \"input\", \"blur\"], [\"input\", \"\"], [\"class\", \"fa fa-spinner fa-spin loader\", 4, \"ngIf\"], [3, \"for\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"class\", \"invalid-feedback d-block\", 4, \"ngIf\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", \"loader\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"invalid-feedback\", \"d-block\"]],\n    template: function TextInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1, 2);\n        i0.ɵɵlistener(\"input\", function TextInputComponent_Template_input_input_1_listener($event) {\n          return ctx.onChange($event.target.value);\n        })(\"blur\", function TextInputComponent_Template_input_blur_1_listener() {\n          return ctx.onTouched();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TextInputComponent_div_3_Template, 1, 0, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, TextInputComponent_div_6_Template, 3, 2, \"div\", 5);\n        i0.ɵɵtemplate(7, TextInputComponent_div_7_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.label);\n        i0.ɵɵproperty(\"ngClass\", (ctx.controlDir == null ? null : ctx.controlDir.control == null ? null : ctx.controlDir.control.touched) ? !ctx.controlDir.control.valid ? \"is-invalid\" : \"is-valid\" : null)(\"type\", ctx.type);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", (ctx.controlDir == null ? null : ctx.controlDir.control == null ? null : ctx.controlDir.control.status) === \"PENDING\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"for\", ctx.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.controlDir == null ? null : ctx.controlDir.control == null ? null : ctx.controlDir.control.valid) && (ctx.controlDir == null ? null : ctx.controlDir.control == null ? null : ctx.controlDir.control.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.controlDir == null ? null : ctx.controlDir.control == null ? null : ctx.controlDir.control.valid) && (ctx.controlDir == null ? null : ctx.controlDir.control == null ? null : ctx.controlDir.control.dirty));\n      }\n    },\n    directives: [i2.NgClass, i2.NgIf],\n    styles: [\".form-signin[_ngcontent-%COMP%]{width:100%;max-width:420px;padding:15px;margin:auto}.form-label-group[_ngcontent-%COMP%]{position:relative;margin-bottom:1rem}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-label-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{height:3.125rem;padding:.75rem}.form-label-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;display:block;width:100%;margin-bottom:0;line-height:1.5;color:#495057;pointer-events:none;cursor:text;border:1px solid transparent;border-radius:.25rem;transition:all .1s ease-in-out}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::placeholder{color:transparent}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown){padding-top:1.25rem;padding-bottom:.25rem}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(:placeholder-shown) ~ label[_ngcontent-%COMP%]{padding-top:.25rem;padding-bottom:.25rem;font-size:12px;color:#777}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-webkit-autofill ~ label[_ngcontent-%COMP%]{padding-top:.25rem;padding-bottom:.25rem;font-size:12px;color:#777}@supports (-ms-ime-align: auto){.form-label-group[_ngcontent-%COMP%]{display:flex;flex-direction:column-reverse}.form-label-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{position:static}.form-label-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-ms-input-placeholder{color:#777}}.loader[_ngcontent-%COMP%]{position:absolute;width:auto;top:15px;right:10px;margin-top:0}\"]\n  });\n  return TextInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}