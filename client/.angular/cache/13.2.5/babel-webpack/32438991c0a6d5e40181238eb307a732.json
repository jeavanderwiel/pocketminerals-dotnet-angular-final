{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/basket/basket.service\";\nimport * as i2 from \"../checkout.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../shared/components/text-input/text-input.component\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/cdk/stepper\";\nconst _c0 = [\"cardNumber\"];\nconst _c1 = [\"cardExpiry\"];\nconst _c2 = [\"cardCvc\"];\n\nfunction CheckoutPaymentComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 17);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.cardErrors);\n  }\n}\n\nfunction CheckoutPaymentComponent_i_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 18);\n  }\n}\n\nexport let CheckoutPaymentComponent = /*#__PURE__*/(() => {\n  class CheckoutPaymentComponent {\n    constructor(basketService, checkoutService, toastr, router) {\n      this.basketService = basketService;\n      this.checkoutService = checkoutService;\n      this.toastr = toastr;\n      this.router = router;\n      this.cardHandler = this.onChange.bind(this);\n      this.loading = false;\n      this.cardNumberValid = false;\n      this.cardExpiryValid = false;\n      this.cardCvcValid = false;\n    }\n\n    ngAfterViewInit() {\n      this.stripe = Stripe('pk_test_51KTQQQFvIeRSPGEZFHEZa39JYzf5T7yOMKiYvCYR0NSTEoL7DVZmHRpLbhj0VuQOGnDU8tV4dksFDrhVgjsnszrG00xE6H4AJI');\n      const elements = this.stripe.elements();\n      this.cardNumber = elements.create('cardNumber');\n      this.cardNumber.mount(this.cardNumberElement.nativeElement);\n      this.cardNumber.addEventListener('change', this.cardHandler);\n      this.cardExpiry = elements.create('cardExpiry');\n      this.cardExpiry.mount(this.cardExpiryElement.nativeElement);\n      this.cardExpiry.addEventListener('change', this.cardHandler);\n      this.cardCvc = elements.create('cardCvc');\n      this.cardCvc.mount(this.cardCvcElement.nativeElement);\n      this.cardCvc.addEventListener('change', this.cardHandler);\n    }\n\n    ngOnDestroy() {\n      this.cardNumber.destroy();\n      this.cardExpiry.destroy();\n      this.cardCvc.destroy();\n    }\n\n    onChange(event) {\n      if (event.error) {\n        this.cardErrors = event.error.message;\n      } else {\n        this.cardErrors = null;\n      }\n\n      switch (event.elementType) {\n        case 'cardNumber':\n          this.cardNumberValid = event.complete;\n          break;\n\n        case 'cardExpiry':\n          this.cardExpiryValid = event.complete;\n          break;\n\n        case 'cardCvc':\n          this.cardCvcValid = event.complete;\n          break;\n      }\n    }\n\n    submitOrder() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.loading = true;\n        const basket = this.basketService.getCurrentBasketValue();\n\n        try {\n          const createdOrder = yield this.createOrder(basket);\n          const paymentResult = yield this.confirmPaymentWithStripe(basket);\n\n          if (paymentResult.paymentIntent) {\n            this.basketService.deleteLocalBasket(basket.id);\n            const navigationExtras = {\n              state: createdOrder\n            };\n            this.router.navigate(['checkout/success'], navigationExtras);\n          } else {\n            this.toastr.error(paymentResult.error.message);\n          }\n\n          this.loading = false;\n        } catch (error) {\n          console.log(error);\n          this.loading = false;\n        }\n      });\n    }\n\n    confirmPaymentWithStripe(basket) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.stripe.confirmCardPayment(basket.clientSecret, {\n          payment_method: {\n            card: this.cardNumber,\n            billing_details: {\n              name: this.checkoutForm.get('paymentForm').get('nameOnCard').value\n            }\n          }\n        });\n      });\n    }\n\n    createOrder(basket) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const orderToCreate = this.getOrderToCreate(basket);\n        return this.checkoutService.createOrder(orderToCreate).toPromise();\n      });\n    }\n\n    getOrderToCreate(basket) {\n      return {\n        basketId: basket.id,\n        deliveryMethodId: +this.checkoutForm.get('deliveryForm').get('deliveryMethod').value,\n        shipToAddress: this.checkoutForm.get('addressForm').value\n      };\n    }\n\n  }\n\n  CheckoutPaymentComponent.ɵfac = function CheckoutPaymentComponent_Factory(t) {\n    return new (t || CheckoutPaymentComponent)(i0.ɵɵdirectiveInject(i1.BasketService), i0.ɵɵdirectiveInject(i2.CheckoutService), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  CheckoutPaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckoutPaymentComponent,\n    selectors: [[\"app-checkout-payment\"]],\n    viewQuery: function CheckoutPaymentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cardNumberElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cardExpiryElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cardCvcElement = _t.first);\n      }\n    },\n    inputs: {\n      checkoutForm: \"checkoutForm\"\n    },\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"mt-4\", 3, \"formGroup\"], [1, \"row\"], [\"formGroupName\", \"paymentForm\", 1, \"form-group\", \"col-12\"], [\"formControlName\", \"nameOnCard\", 3, \"label\"], [1, \"form-group\", \"col-6\"], [1, \"form-control\", \"py-3\"], [\"cardNumber\", \"\"], [4, \"ngIf\"], [1, \"form-group\", \"col-3\"], [\"cardExpiry\", \"\"], [\"cardCvc\", \"\"], [1, \"float-none\", \"d-flex\", \"justify-content-between\", \"flex-column\", \"flex-lg-row\", \"mb-5\"], [\"cdkStepperPrevious\", \"\", 1, \"btn\", \"btn-outline-primary\"], [1, \"fa\", \"fa-angle-left\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"fa\", \"fa-angle-right\"], [\"class\", \"fa fa-spinner fa-spin\", 4, \"ngIf\"], [1, \"text-danger\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\"]],\n    template: function CheckoutPaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"app-text-input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"div\", 5, 6);\n        i0.ɵɵtemplate(7, CheckoutPaymentComponent_ng_container_7_Template, 3, 1, \"ng-container\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelement(9, \"div\", 5, 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelement(12, \"div\", 5, 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"button\", 12);\n        i0.ɵɵelement(16, \"i\", 13);\n        i0.ɵɵtext(17, \" Back to Review \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function CheckoutPaymentComponent_Template_button_click_18_listener() {\n          return ctx.submitOrder();\n        });\n        i0.ɵɵtext(19, \" Submit order \");\n        i0.ɵɵelement(20, \"i\", 15);\n        i0.ɵɵtemplate(21, CheckoutPaymentComponent_i_21_Template, 1, 0, \"i\", 16);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.checkoutForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"label\", \"Name on card\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.cardErrors);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.checkoutForm.get(\"paymentForm\").invalid || !ctx.cardNumberValid || !ctx.cardExpiryValid || !ctx.cardCvcValid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    directives: [i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormGroupName, i6.TextInputComponent, i5.NgControlStatus, i5.FormControlName, i7.NgIf, i8.CdkStepperPrevious],\n    styles: [\"\"]\n  });\n  return CheckoutPaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}