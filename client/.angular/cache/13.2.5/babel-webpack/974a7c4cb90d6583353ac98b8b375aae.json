{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { NotFoundComponent } from './core/not-found/not-found.component';\nimport { ServerErrorComponent } from './core/server-error/server-error.component';\nimport { TestErrorComponent } from './core/test-error/test-error.component';\nimport { HomeComponent } from './home/home.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: HomeComponent,\n  data: {\n    breadcrumb: 'Home'\n  }\n}, {\n  path: 'test-error',\n  component: TestErrorComponent,\n  data: {\n    breadcrumb: 'Test Errors'\n  }\n}, {\n  path: 'server-error',\n  component: ServerErrorComponent,\n  data: {\n    breadcrumb: 'Server Error'\n  }\n}, {\n  path: 'not-found',\n  component: NotFoundComponent,\n  data: {\n    breadcrumb: 'Not found'\n  }\n}, {\n  path: 'shop',\n  loadChildren: () => import('./shop/shop.module').then(mod => mod.ShopModule),\n  data: {\n    breadcrumb: 'Shop'\n  }\n}, {\n  path: 'basket',\n  loadChildren: () => import('./basket/basket.module').then(mod => mod.BasketModule),\n  data: {\n    breadcrumb: 'Basket'\n  }\n}, {\n  path: 'checkout',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./checkout/checkout.module').then(mod => mod.CheckoutModule),\n  data: {\n    breadcrumb: 'Checkout'\n  }\n}, {\n  path: 'orders',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./orders/orders.module').then(mod => mod.OrdersModule),\n  data: {\n    breadcrumb: 'Orders'\n  }\n}, {\n  path: 'account',\n  loadChildren: () => import('./account/account.module').then(mod => mod.AccountModule),\n  data: {\n    breadcrumb: {\n      skip: true\n    }\n  }\n}, {\n  path: 'admin',\n  canActivate: [AuthGuard, AdminGuard],\n  loadChildren: () => import('./admin/admin.module').then(mod => mod.AdminModule),\n  data: {\n    breadcrumb: 'Admin'\n  }\n}, {\n  path: '**',\n  redirectTo: 'not-found',\n  pathMatch: 'full'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes)], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}